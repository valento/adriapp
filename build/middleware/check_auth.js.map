{"version":3,"sources":["../../server/middleware/check_auth.js"],"names":["checkAuth","req","res","next","token","get","user_id","params","verifyed","jwt","verify","process","env","JWT_SECRET","Number","status","json","message","err"],"mappings":";;;;;;AAAA;;;;;;AAEA,SAASA,SAAT,CAAmBC,GAAnB,EAAwBC,GAAxB,EAA6BC,IAA7B,EAAmC;AACjC,MAAI;AACF,QAAMC,QAAQH,IAAII,GAAJ,CAAQ,eAAR,CAAd;AADE,QAEMC,OAFN,GAEkBL,IAAIM,MAFtB,CAEMD,OAFN;;AAGF,QAAME,WAAWC,uBAAIC,MAAJ,CAAWN,KAAX,EAAkBO,QAAQC,GAAR,CAAYC,UAA9B,CAAjB;AACA,QAAGC,OAAOR,OAAP,MAAoBQ,OAAON,SAASF,OAAhB,CAAvB,EAAiD;AAC/C,aAAOJ,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAAS,sBAAX,EAArB,CAAP;AACD,KAFD,MAEO;AACLd;AACD;AACF,GATD,CAUA,OAAMe,GAAN,EAAW;AACT,WAAOhB,IAAIa,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAASC,GAAX,EAArB,CAAP;AACD;AACF;;kBAEclB,S","file":"check_auth.js","sourcesContent":["import jwt from 'jsonwebtoken'\n\nfunction checkAuth(req, res, next) {\n  try {\n    const token = req.get('Authorization')\n    const { user_id } = req.params\n    const verifyed = jwt.verify(token, process.env.JWT_SECRET)\n    if(Number(user_id) !== Number(verifyed.user_id)) {\n      return res.status(401).json({ message: 'Unauthorized request'})\n    } else {\n      next()\n    }\n  }\n  catch(err) {\n    return res.status(401).json({ message: err})\n  }\n}\n\nexport default checkAuth\n"]}