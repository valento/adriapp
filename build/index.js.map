{"version":3,"sources":["../server/index.js"],"names":["users","app","db","userdb","use","bodyParser","json","urlencoded","extended","lng","PORT","process","env","ENV","NODE_ENV","console","log","ENTRY","wpConfig","require","webpack","wpMiddle","wpHot","compiler","hot","express","static","path","join","__dirname","get","req","res","data","fetchById","params","then","status","user","username","credit","role","Number","gender","catch","error","message","post","body","updateUserData","err","errors","global","msg","globals","fetchOne","query","result","undefined","credentials","email","password","bcrypt","compareSync","token","jwt","sign","user_id","hash","genSalt","signUpUser","redirect","id","headers","split","lan","match","ln","markup","send","server","listen"],"mappings":"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","file":"index.js","sourcesContent":["import express from 'express'\nimport path from 'path'\nimport bodyParser from 'body-parser'\n\n//import React from 'react'\n//import { Provider } from 'react-redux'\n//import { renderToString } from 'react-dom/server'\n//import { StaticRouter } from 'react-router'\nimport {template} from './template'\n//\n//import S3 from 'aws-sdk/clients/s3'\nimport userdb from './api/user'\n\nimport jwt from 'jsonwebtoken'\nimport passport from 'passport'\nimport { Strategy as LocalStrategy } from 'passport-local'\nimport bcrypt from 'bcrypt-nodejs'\n/* -------------------------------------------------------------- */\nconst users = []\n\n// ==== PASSPORT ============================================\n/*\npassport.use(new LocalStrategy((user, done) => {\n  //\n}))\n*/\n// ==========================================================\n\nlet app = express()\n\nlet db = new userdb('./data/aapp.db', 'users')\n//const s3 = new S3({})\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({extended: true}))\n\nlet lng\nconst PORT = process.env.PORT || 8000\nconst ENV = process.env.NODE_ENV || 'development'\nconsole.log(ENV)\nconst ENTRY = ENV === 'production' ? '../dist/index.html' : '../client/index.html'\n\nif(ENV === 'development'){\n/* ------ IN MEMORY bundle configuration ---------------------------- */\n  const wpConfig = require('../webpack.conf.js')(ENV)\n  const webpack = require('webpack')\n  const wpMiddle = require('webpack-dev-middleware')\n  const wpHot = require('webpack-hot-middleware')\n  const compiler = webpack(wpConfig)\n  app.use(wpMiddle(compiler, {\n    hot: true\n  }))\n  app.use(wpHot(compiler))\n  app.use('/client', express.static(path.join(__dirname, '../client')))\n} else {\n  // PRODUCTION configuration\n  app.use('/dist', express.static(path.join(__dirname, '../dist')))\n}\n/*\napp.use('/user/data/', (req,res) => {\n  if(!req.headers.authorization) {\n    res.status(400).json({errors: {\n      global: 'Unauthorized request! Login first..'\n    }})\n  } else {\n    next()\n  }\n})\n*/\n\n// ==== AUTHORIZATION ROOTS ==========================\n// ---- Get User Data: ------------------------------\napp.get('/user/data/:user_id', (req,res) =>{\n  var data = ['username','gender','credit','role']\n  db.fetchById( req.params , data ).then( user => {\n    res.status(200).json({\n      user: {\n        username: user.username,\n        credit: user.credit,\n        role: Number(user.role),\n        gender: (user.gender !== null) ? user.gender : -1\n      }\n    })\n  })\n  .catch( error => console.log(error.message))\n})\n\n// ---- Save User Data: ------------------------------\n\napp.post('/user/data/:user_id', (req,res) => {\n  const { data } = req.body.data\n  console.log(data)\n  db.updateUserData(req.params, { data }).then((err,user) => {\n    if(err){\n      res.status(400).json({\n        errors: {\n          global: err.msg\n        }\n      })\n    } else {\n      res.status(200).json({\n        message: {\n          globals: 'Data saved successfully...'\n        }\n      })\n    }\n  })\n})\n\n// ==== Check: if user-email exist ===================\napp.get('/auth/test', (req,res) => {\n  //const { email } = req.query//req.body.credentials\n  db.fetchOne( req.query )\n  .then(result => {\n    if(!result || undefined){\n  // If not: invite to subscribe\n      res.status(400).json({\n        errors: {\n          global: 'Suscribe ya...'\n        }\n      })\n    } else {\n      const msg = (lng === 'es') ?\n        ('Como estas, mi ' + result.username + '!') :\n        ('Hello, dear ' + result.username + '!')\n      res.status(200).json( {message: { global: msg } })\n    }\n\n  })\n})\n// ----- AUTH: Signup with crdentials: ----------------\napp.post('/auth/login', (req,res) => {\n  const { email, password } = req.body.credentials\n  let msg\n  if(!email || !password) {\n    msg = (lng === 'es') ?\n      ('Faltan Credenciales!') :\n      ('Missing Credentials!')\n    res.status(400).json({errors: { global: msg }})\n    return\n  }\n  var data = ['email','password','username','gender','credit','role','user_id']\n  db.fetchOne( { email }, data )\n  .then( user => {\n    if(user && bcrypt.compareSync(password, user.password)){\n      const token = jwt.sign({\n        email: user.email,\n        user_id: user.user_id\n      }, 'mysecrethere')\n      res.status(200).json({\n        user: {\n          token: token,\n          username: user.username,\n          gender: user.gender,\n          credit: user.credit,\n          role: user.role,\n          user_id: user.user_id\n        }\n      })\n    } else {\n      msg = (lng === 'es') ?\n        ('Credenciales Incorrectos...') :\n        ('Wrong Credentials...')\n      res.status(400).json({errors: {global: msg}})\n    }\n  })\n})\n// ----- AUTH: Save all crdentials: ------------------\napp.post('/auth/signup', (req,res) => {\n  const { email, password } = req.body.credentials\n  let msg\n  console.log('Server Auth User: ', email)\n  if(!email || !password) {\n    msg = (lng === 'es') ?\n      ('Faltan Credenciales...') :\n      ('Missing Credentials...')\n    res.status(400).json({errors: { global: msg }})\n    return\n  }\n  bcrypt.hash(password, bcrypt.genSalt(8,()=>{}), null, (err, hash) => {\n    db.signUpUser({ email, hash })\n    .then( data => {\n  // !!!! Correct data set:\n      const { email } = data\n      var params = ['email','password','username','gender','credit','role','user_id']\n      db.fetchOne( { email }, params )\n      .then( user => {\n        const token = jwt.sign({\n          email: user.email,\n          user_id: user.user_id\n        }, 'mysecrethere')\n        res.status(200).json({\n          user: {\n            token: token,\n            username: user.username,\n            gender: user.gender,\n            credit: user.credit,\n            role: user.role,\n            user_id: user.user_id\n          }\n        })\n      })\n    })\n    .catch(err => res.status(500).json( {errors: { global: err.message }} ))\n  })\n\n})\n// ----------------------------------------------------------\n/*\napp.post('/auth/user', (req,res) => {\n\n  const token = jwt.sign({\n    // Object to Encript and Save\n    sub: user.id,\n    username: user.username\n    // Secrete key signe\n  }, 'mysupersecrete', expiresIn: '3 Hours')\n\n  res.status(200).send({access_token: token})\n})\n*/\n\n/*\napp.use((req,res) => {\n  //if(req.cookie.authenticated)\n})\n*/\n\n// ================================================================\napp.get('/client/css/img/:id', (req,res) => {\n  res.redirect(301, '//s3.eu-central-1.amazonaws.com/' + 'adriapp' + '/' + req.params.id)\n})\napp.get('/dist/img/:id', (req,res) => {\n  res.redirect(301, '//s3.eu-central-1.amazonaws.com/' + 'adriapp' + '/' + req.params.id)\n})\n\n// === Root SERVER REndering ===========================================\n\napp.get('*', (req,res) => {\n  lng = req.headers['accept-language'].split(',')[0].split('-')[0]\n  const lan = (lng.match(/^(es)/))? 'es' : 'en'\n  const params = {\n    ln: lan,\n    env: ENV\n  }\n  const markup = template(params)\n  res.send(markup)\n  //res.set({'Content-Language': lan}).sendFile(path.join(__dirname, ENTRY))\n\n//  const store = {}\n//  const params = {\n//  entry: ENTRY\n//}\n//  const markup = renderToString(\n//    <Provider store={store}>\n//      <StaticRouter location={req.url}>\n//        <Route component={App} />\n//      </StaticRouter>\n//    </Provider>\n//  )\n//  const iState = {\n//    lan: lng\n//  }\n\n  //res.send(template(params, markup, iState))\n})\n\nlet server = app.listen(PORT, () => {\n  console.log('Server running on: ', PORT)\n})\n"]}