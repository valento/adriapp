{"version":3,"sources":["../server/index.js"],"names":["users","app","db","userdb","use","bodyParser","json","urlencoded","extended","PORT","process","env","ENV","NODE_ENV","console","log","ENTRY","wpConfig","require","webpack","wpMiddle","wpHot","compiler","hot","express","static","path","join","__dirname","get","req","res","fetchOne","query","then","result","undefined","status","errors","global","message","username","post","body","credentials","email","password","data","user","bcrypt","compareSync","gender","credit","role","user_id","end","hash","genSalt","err","signUpUser","catch","send","find","u","token","jwt","sign","sub","id","access_token","redirect","params","lng","headers","split","sendFile","server","listen"],"mappings":"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","file":"index.js","sourcesContent":["import express from 'express'\nimport path from 'path'\nimport bodyParser from 'body-parser'\n\nimport React from 'react'\nimport { Provider } from 'react-redux'\nimport { renderToString } from 'react-dom/server'\nimport { StaticRouter } from 'react-router'\nimport template from './template'\n\nimport S3 from 'aws-sdk/clients/s3'\nimport userdb from './api/user'\n\nimport jwt from 'jsonwebtoken'\nimport passport from 'passport'\nimport {Strategy as LocalStrategy} from 'passport-local'\nimport bcrypt from 'bcrypt-nodejs'\n/* -------------------------------------------------------------- */\nconst users = []\n\n// ==== PASSPORT ============================================\n/*\npassport.use(new LocalStrategy((user, done) => {\n  //\n}))\n*/\n// ==========================================================\n\nlet app = express()\n\nlet db = new userdb('./data/aapp.db', 'users')\n//const s3 = new S3({})\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({extended: true}))\n\nconst PORT = process.env.PORT || 8000\nconst ENV = process.env.NODE_ENV || 'development'\nconsole.log(ENV)\nconst ENTRY = ENV === 'production' ? '../dist/index.html' : '../client/index.html'\n\nif(ENV === 'development'){\n/* ------ IN MEMORY bundle configuration ---------------------------- */\n  const wpConfig = require('../webpack.conf.js')(ENV)\n  const webpack = require('webpack')\n  const wpMiddle = require('webpack-dev-middleware')\n  const wpHot = require('webpack-hot-middleware')\n  const compiler = webpack(wpConfig)\n  app.use(wpMiddle(compiler, {\n    hot: true\n  }))\n  app.use(wpHot(compiler))\n  app.use('/client', express.static(path.join(__dirname, '../client')))\n} else {\n  // PRODUCTION configuration\n  app.use('/dist', express.static(path.join(__dirname, '../dist')))\n}\n\n// ==== AUTHORIZATION ROOTS ==========================\n// ==== Check: if user-email exist ===================\napp.get('/auth/test', (req,res) => {\n  //const { email } = req.query//req.body.credentials\n  db.fetchOne( req.query )\n  .then(result => {\n    if(!result || undefined){\n  // If not: invite to subscribe\n      res.status(400).json({\n        errors: {\n          global: 'Suscribe ya...'\n        }\n      })\n    } else {\n      res.status(200).json({\n        message: {\n          global: 'Hola, mi ' + result.username + '!'\n        }\n      })\n    }\n\n  })\n})\n// ----- AUTH: Signup with crdentials: ----------------\napp.post('/auth/login', (req,res) => {\n  const { email, password } = req.body.credentials\n  if(!email || !password) {\n    res.status(400).json({\n      errors: { global: 'Missing Credentials!' }\n    })\n    return\n  }\n  var data = ['email','password','username','gender','credit','role','user_id']\n  db.fetchOne( { email }, data ).then( user => {\n    if(user && bcrypt.compareSync(password, user.password)){\n      res.status(200).json({\n        user: {\n          username: user.username,\n          email: user.email,\n          gender: user.gender,\n          credit: user.credit,\n          role: user.role,\n          user_id: user.user_id\n        }\n      })\n      res.end()\n    }\n\n  })\n\n  //res.status(200).end()\n  // check DB for All Credentials:\n})\n// ----- AUTH: Save all crdentials: ------------------\napp.post('/auth/signup', (req,res) => {\n  const { email, password } = req.body.credentials\n  console.log('Server Auth User: ', email)\n  if(!email || !password) {\n    res.status(400)\n    .json({errors: { global: 'Missing Credentials' }})\n    return\n  }\n// ------ Encrypt and send to API: --------------------\n  bcrypt.hash(password, bcrypt.genSalt(8,()=>{}), null, (err, hash) => {\n    db.signUpUser({ email, hash })\n    .then(result => {\n      res.status(200).json(result)\n    })\n    .catch(err => res.status(500).json(err.message))\n  })\n\n})\n// ----------------------------------------------------------\n\napp.post('/auth/user', (req,res) => {\n  if(!req.body.email && !password) {\n    res.status(400)\n    .send('You must input a valid email address and password')\n    return\n  }\n  const { email, password } = req.body\n\n  const user = users.find(u => {\n    return u.email === email// && u.password === password\n  })\n\n  if(!user) {\n    res.status(401).send('User not found...')\n    return\n  }\n\n  const token = jwt.sign({\n    // Object to Encript and Save\n    sub: user.id,\n    username: user.username\n    // Secrete key signe\n  }, 'mysupersicrete', {/*Options: expiresIn: '3 Hours'*/})\n\n  res.status(200).send({access_token: token})\n})\n\n/*\napp.use((req,res) => {\n  //if(req.cookie.authenticated)\n})\n*/\n\n// ================================================================\napp.get('/client/css/img/:id', (req,res) => {\n  res.redirect(301, '//s3.eu-central-1.amazonaws.com/' + 'adriapp' + '/' + req.params.id)\n})\napp.get('/dist/img/:id', (req,res) => {\n  console.log('cssssssw')\n  res.redirect(301, '//s3.eu-central-1.amazonaws.com/' + 'adriapp' + '/' + req.params.id)\n})\n\n// === Root SERVER REndering ===========================================\n\napp.get('/', (req,res) => {\n  const lng = req.headers['accept-language'].split(',')[0].split('-')[0]\n  console.log(lng)\n/*\n  const store = {}\n  const params = {\n  entry: ENTRY\n}\n  const markup = renderToString(\n    <Provider store={store}>\n      <StaticRouter location={req.url}>\n        <Route component={App} />\n      </StaticRouter>\n    </Provider>\n  )\n  const iState = {\n    lan: lng\n  }\n*/\n  //res.send(template(params, markup, iState))\n  res.sendFile(path.join(__dirname, ENTRY))\n})\n\nlet server = app.listen(PORT, () => {\n  console.log('Server running on: ', PORT)\n})\n"]}