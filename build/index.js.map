{"version":3,"sources":["../server/index.js"],"names":["users","app","db","sql","use","bodyParser","json","urlencoded","extended","PORT","process","env","ENV","NODE_ENV","console","log","ENTRY","wpConfig","require","webpack","wpMiddle","wpHot","compiler","hot","express","static","path","join","__dirname","post","req","res","body","credentials","email","password","status","send","bcrypt","hash","genSalt","err","signUpUser","then","result","catch","message","user","find","u","token","jwt","sign","sub","id","username","access_token","get","redirect","params","lng","headers","split","sendFile","server","listen"],"mappings":"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","file":"index.js","sourcesContent":["import express from 'express'\nimport path from 'path'\nimport bodyParser from 'body-parser'\n\nimport React from 'react'\nimport { Provider } from 'react-redux'\nimport { renderToString } from 'react-dom/server'\nimport { StaticRouter } from 'react-router'\nimport template from './template'\n\nimport S3 from 'aws-sdk/clients/s3'\nimport sql from './api/sql'\n\nimport jwt from 'jsonwebtoken'\nimport passport from 'passport'\nimport {Strategy as LocalStrategy} from 'passport-local'\nimport bcrypt from 'bcrypt-nodejs'\n/* -------------------------------------------------------------- */\nconst users = []\n\n// ==== PASSPORT ============================================\n/*\npassport.use(new LocalStrategy((user, done) => {\n  //\n}))\n*/\n// ==========================================================\n\nlet app = express()\n\nlet db = new sql('./data/aapp.db', 'users')\n//const s3 = new S3({})\napp.use(bodyParser.json())\napp.use(bodyParser.urlencoded({extended: true}))\n\nconst PORT = process.env.PORT || 8000\nconst ENV = process.env.NODE_ENV || 'development'\nconsole.log(ENV)\nconst ENTRY = ENV === 'production' ? '../dist/index.html' : '../client/index.html'\n\nif(ENV === 'development'){\n/* ------ IN MEMORY bundle configuration ---------------------------- */\n  const wpConfig = require('../webpack.conf.js')(ENV)\n  const webpack = require('webpack')\n  const wpMiddle = require('webpack-dev-middleware')\n  const wpHot = require('webpack-hot-middleware')\n  const compiler = webpack(wpConfig)\n  app.use(wpMiddle(compiler, {\n    hot: true\n  }))\n  app.use(wpHot(compiler))\n  app.use('/client', express.static(path.join(__dirname, '../client')))\n} else {\n  // PRODUCTION configuration\n  app.use('/dist', express.static(path.join(__dirname, '../dist')))\n}\n\n// === AUTH =============================================================\n\napp.post('/auth/user', (req,res) => {\n  const {email,password} = req.body.credentials\n  if(!email || !password) {\n    res.status(400)\n    .send('You must input a valid email and password')\n    return\n  }\n\n  bcrypt.hash(password, bcrypt.genSalt(8,()=>{}), null, (err, hash) => {\n    db.signUpUser({email,hash})\n    .then(result => res.status(200).json(result))\n    .catch(err => res.status(500).json(err.message))\n  })\n\n})\n// ----------------------------------------------------------\n\napp.post('/auth/login', (req,res) => {\n  if(!req.body.email) {// && !password\n    res.status(400)\n    .send('You must input a valid email address and password')\n    return\n  }\n  const {email} = req.body\n\n  const user = users.find(u => {\n    return u.email === email// && u.password === password\n  })\n\n  if(!user) {\n    res.status(401).send('User not found...')\n    return\n  }\n\n  const token = jwt.sign({\n    // Object to Encript and Save\n    sub: user.id,\n    username: user.username\n    // Secrete key signe\n  }, 'mysupersicrete', {/*Options: expiresIn: '3 Hours'*/})\n\n  res.status(200).send({access_token: token})\n})\n\n/*\napp.use((req,res) => {\n  //if(req.cookie.authenticated)\n})\n*/\n\n// ================================================================\napp.get('/client/css/img/:id', (req,res) => {\n  res.redirect(301, '//s3.eu-central-1.amazonaws.com/' + 'adriapp' + '/' + req.params.id)\n})\napp.get('/dist/img/:id', (req,res) => {\n  console.log('cssssssw')\n  res.redirect(301, '//s3.eu-central-1.amazonaws.com/' + 'adriapp' + '/' + req.params.id)\n})\n\n// === Root SERVER REndering ===========================================\n\napp.get('/', (req,res) => {\n  const lng = req.headers['accept-language'].split(',')[0].split('-')[0]\n  console.log(lng)\n/*\n  const store = {}\n  const params = {\n  entry: ENTRY\n}\n  const markup = renderToString(\n    <Provider store={store}>\n      <StaticRouter location={req.url}>\n        <Route component={App} />\n      </StaticRouter>\n    </Provider>\n  )\n  const iState = {\n    lan: lng\n  }\n*/\n  //res.send(template(params, markup, iState))\n  res.sendFile(path.join(__dirname, ENTRY))\n})\n\nlet server = app.listen(PORT, () => {\n  console.log('Server running on: ', PORT)\n})\n"]}